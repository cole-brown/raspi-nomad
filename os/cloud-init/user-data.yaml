#cloud-config

# https://help.ubuntu.com/community/CloudInit
#
# Examples:
#   https://github.com/canonical/cloud-init/tree/fbcb224bc12495ba200ab107246349d802c5d8e6/doc/examples
#   https://github.com/canonical/cloud-init/blob/fbcb224bc12495ba200ab107246349d802c5d8e6/doc/examples/cloud-config.txt


#-------------------------------------------------------------------------------
# Host
#-------------------------------------------------------------------------------

hostname: home-2019-raspi4

final_message: |
  $HOSTNAME booted.
  [BOOTED]    uptime: $UPTIME
  [BOOTED] timestamp: $TIMESTAMP

# This value must exist as a filepath in '/usr/share/zoneinfo'.
timezone: US/Pacific

locale: en_US.UTF-8

# Where the log is and the user/group that should own it.
# These are the defaults.
# def_log_file: /var/log/cloud-init.log
# syslog_fix_perms: syslog:adm


#-------------------------------------------------------------------------------
# System
#-------------------------------------------------------------------------------

manage_etc_hosts: true

# Enable 'byobu' terminal multiplexer for all users.
byobu_by_default: system

# First boot: Should the root filesystem's partition be resized?
resize_rootfs: true


# TODO: Mounts?
# TODO: ram filesystems for /tmp, other stuff?
# TODO: mount default fields for no-atime, other stuff to make flash last longer?


#-------------------------------------------------------------------------------
# Packages
#-------------------------------------------------------------------------------

# Run 'apt-get upgrade' on first boot.
package_upgrade: true
# This is an alias:
# apt_upgrade: true

# Update Apt database on first boot.
package_update: true

# Install these packages:
packages:
  # ------------------------------
  # I just want these.
  # ------------------------------
  - tree
  - ripgrep
  # ------------------------------
  # These seem commonly needed.
  # ------------------------------
  - apt-transport-https
  - python3-pip
  - git
  - software-properties-common
  # ------------------------------
  # Definitely needed:
  # ------------------------------
  - curl
  # ---
  # Docker
  # ---
  # - curl
  - ca-certificates
  - gnupg
  - lsb-release
  # If I can figure out how to get Docker's apt repo:
  # - docker-ce
  # - docker-ce-cli
  # - containerd.io
  # And uninstall these first?
  #   - docker docker-engine docker.io containerd runc

# Reboot after package install/update if necessary
package_reboot_if_required: true


#-------------------------------------------------------------------------------
# Groups & Users
#-------------------------------------------------------------------------------
# https://github.com/canonical/cloud-init/blob/fbcb224bc12495ba200ab107246349d802c5d8e6/doc/examples/cloud-config-user-groups.txt

# Add groups to the system
# # The following example adds the ubuntu group with members 'root' and 'sys'
# # and the empty group cloud-users.
# groups:
#   - ubuntu: [root,sys]
#   - cloud-users

# Add users to the system. Users are added after groups are added.
# Note: Most of these configuration options will not be honored if the user
# #       already exists. Following options are the exceptions and they are
# #       applicable on already-existing users:
# #       - 'plain_text_passwd', 'hashed_passwd', 'lock_passwd', 'sudo',
# #         'ssh_authorized_keys', 'ssh_redirect_user'.
# users:
#   - default
#   - name: foobar
#     gecos: Foo B. Bar
#     primary_group: foobar
#     groups: users
#     selinux_user: staff_u
#     expiredate: '2032-09-01'
#     ssh_import_id: foobar
#     lock_passwd: false
#     passwd: $6$j212wezy$7H/1LT4f9/N3wpgNunhsIqtMj62OKiS3nyNwuizouQc3u7MbYCarYeAHWYPYb2FT.lbioDm2RrkJPb9BZMN1O/
#   - name: barfoo
#     gecos: Bar B. Foo
#     sudo: ALL=(ALL) NOPASSWD:ALL
#     groups: users, admin
#     ssh_import_id: None
#     lock_passwd: true
#     ssh_authorized_keys:
#       - <ssh pub key 1>
#       - <ssh pub key 2>
#   - name: cloudy
#     gecos: Magic Cloud App Daemon User
#     inactive: '5'
#     system: true
#   - name: fizzbuzz
#     sudo: False
#     ssh_authorized_keys:
#       - <ssh pub key 1>
#       - <ssh pub key 2>
#   - snapuser: joe@joeuser.io
#   - name: nosshlogins
#     ssh_redirect_user: true


# Change the default user:
system_info:
 default_user:
   name: main
   gecos: Main Username
   plain_text_passwd: 'I do not like raspberries.'
   home: /home/main
   shell: /bin/bash
   lock_passwd: True


#-------------------------------------------------------------------------------
# SSH
#-------------------------------------------------------------------------------

# Disabled by default, but just to be safe...
ssh_pwauth: false

# Add each of these to the configured user's/first user's authorized SSH keys.
ssh_authorized_keys:
  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINeCTYYlowUmo380KdCo0N83APaXzga1fqLES3SlqvkP spydez@home-2017-desk

# By default, the fingerprints of the authorized keys for the users
# cloud-init adds are printed to the console. Setting
# no_ssh_fingerprints to true suppresses this output.
no_ssh_fingerprints: false

# By default, (most) ssh host keys are printed to the console. Setting
# emit_keys_to_console to false suppresses this output.
ssh:
  emit_keys_to_console: false


# Local Variables:
# mode: yaml
# End:
