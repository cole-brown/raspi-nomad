---

# Host patterns: https://docs.ansible.com/ansible/latest/user_guide/intro_patterns.html
# `&` is for an intersection of groups/hosts.
- hosts: dc_2021_home:&home_2019_raspi4

  # # ============================================================================
  # # Constants
  # # ============================================================================
  # vars:
  #   foo: "bar"

  # # ============================================================================
  # # Execute the roles.
  # # ============================================================================
  # roles:
  #   - foo.bar
  #   - foo.qux
  #   - narf

  # ============================================================================
  # Tasks:
  # ============================================================================
  tasks:
    # # --------------------------------------------------------------------------
    # # Debug
    # # --------------------------------------------------------------------------
    #
    # - name: Print | Facts
    #   ansible.builtin.debug:
    #     var: ansible_facts
    #
    # - name: Print | Vars | Host
    #   ansible.builtin.debug:
    #     var: hostvars["home_2019_raspi4"]
    #
    # - name: Print | Vars | Group
    #   ansible.builtin.debug:
    #     var: groups


    # --------------------------------------------------------------------------
    # [Set-Up] Gather Facts
    # --------------------------------------------------------------------------
    - name: Git Root | Gather Fact
      delegate_to: localhost
      command:
        cmd: "git rev-parse --show-toplevel"
      register: cmd_git_root
      changed_when: false

    - name: Git Root | Set Fact
      set_fact:
        path_git_root: "{{ cmd_git_root.stdout }}"


    # --------------------------------------------------------------------------
    # [Install] Prerequisites
    # --------------------------------------------------------------------------

    - name: Apt | Install | ca-certificates
      apt:
        name: ca-certificates
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | gnupg
      apt:
        name: gnupg
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | curl
      apt:
        name: curl
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | lsb-release
      apt:
        name: lsb-release
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.


    # --------------------------------------------------------------------------
    # [Install] Apt Repos
    # --------------------------------------------------------------------------
    # Add all extra apt repos before we run apt update/upgarde.

    - name: Apt | Docker Repo
      include_tasks: "apt.add-repo.yaml"
      vars:
        repo_item:
          name_display: Docker
          repo:
            # For repos added like: `deb [{{ architecture }} signed-by={{ dearmored }}] URL {{ distribution_release }} BRANCH`
            url: https://download.docker.com/linux/ubuntu
            branch: stable
          key:
            url: https://download.docker.com/linux/ubuntu/gpg
            basename: docker # docker.asc, docker.gpg
            checksum:
              # curl -fsSL https://download.docker.com/linux/ubuntu/gpg > /tmp/docker.asc
              # gpg --dearmor < /tmp/docker.asc | sha1sum
              # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
              # `ansible.builtin.copy` uses `sha1` for checksumming.
              dearmored: "7c67919f823e005af75293a0edac7d0799252213"

    - name: Apt | HashiCorp Repo
      include_tasks: "apt.add-repo.yaml"
      vars:
        repo_item:
          name_display: HashiCorp
          repo:
            # For repos added like: `deb [{{ architecture }}] URL {{ distribution_release }} BRANCH`
            url: https://apt.releases.hashicorp.com/
            branch: main
          key:
            url: https://apt.releases.hashicorp.com/gpg
            basename: hashicorp # hashicorp.asc, hashicorp.gpg
            checksum:
              # gpg --dearmor < /path/to/repo/ansible/gpg/hashicorp.asc | sha1sum
              # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
              # `ansible.builtin.copy` uses `sha1` for checksumming.
              dearmored: "dcece7980f1a183b1d59b26354247a29057786e0"


    # --------------------------------------------------------------------------
    # [Install] Apt Prep.
    # --------------------------------------------------------------------------
    # Update the apt cache and upgrade existing packages.

    - name: Apt | Update Cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      # Don't care if this says the cache was old - only care if that causes other
      # steps to do something. So the status of this isn't as important - those
      # other steps will say if they changed.
      changed_when: false

    - name: Apt | Upgrade
      apt:
        upgrade: yes


    # --------------------------------------------------------------------------
    # [Install] Docker
    # --------------------------------------------------------------------------

    # ------------------------------
    # Install
    # ------------------------------
    - name: Apt | Install | Docker Container Engine
      apt:
        name: docker-ce
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | Docker CE CLI
      apt:
        name: docker-ce-cli
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | containerd.io
      apt:
        name: containerd.io
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    - name: Apt | Install | Docker Compose Plugin
      apt:
        name: docker-compose-plugin
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.


    # --------------------------------------------------------------------------
    # [Install] HashiCorp Stuff: Nomad
    # --------------------------------------------------------------------------

    # ------------------------------
    # Install
    # ------------------------------
    - name: Apt | Install | HashiCorp Nomad
      apt:
        name: nomad
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    # ------------------------------
    # Configure
    # ------------------------------
    - name: Nomad | Root Directory | Create
      file:
        state: directory
        path: "/srv/nomad"
        owner: "nomad"
        group: "nomad"
        recurse: no

    #  If you do not run Nomad as root, make sure you add the Nomad user to the
    #  Docker group so Nomad can communicate with the Docker daemon.
    #    - https://www.nomadproject.io/docs/drivers/docker#client-requirements
    #  Just add it to the Docker group regardless?
    - name: Nomad | User Groups | Docker
      user:
        name: nomad
        groups: docker
        append: yes
    - name: Nomad | Config Files | /etc/nomad.d
      copy:
        src: "{{ path_git_root }}/os/etc/nomad.d"
        dest: "/etc/"
        owner: "nomad"
        group: "nomad"
        mode: "u=rw,go=r"
        directory_mode: "u=rwx,go=rx"
      register: config_file_nomad
      # notify:
      #   - restart-service-nomad

    - name: Nomad | Config Files | /etc/system.d/service/
      copy:
        src: "{{ path_git_root }}/os/etc/systemd/system/nomad.service"
        dest: "/etc/systemd/system/nomad.service"
        owner: "root"
        group: "root"
        mode: "u=rw,go=r"
        directory_mode: "u=rwx,go=rx"
      register: systemd_file_nomad
      # notify:
      #   - restart-service-nomad

    - name: Nomad | Service | Reload `system.d` Daemon
      systemd:
        daemon_reload: yes
      when:
        - systemd_file_nomad.changed

    - name: Nomad | Service | Enable
      service:
        name: nomad
        # Does nothing if already enabled & running.
        enabled: true
        state: started
      register: systemd_service_enabled_nomad

    - name: Nomad | Service | Restart
      service:
        name: nomad
        state: restarted
      when:
        - systemd_file_nomad.changed or config_file_nomad.changed
        - not systemd_service_enabled_nomad.changed

    - name: Nomad | Web UI | Check
      uri:
        # NOTE: `4646` is the default port for Nomad's web UI.
        url: "http://{{ ansible_host }}:4646/ui/jobs"
      when: run.config.nomad


    # --------------------------------------------------------------------------
    # HashiCorp Stuff: Consul
    # --------------------------------------------------------------------------

    # ------------------------------
    # Install
    # ------------------------------
    - name: Apt | Install | HashiCorp Consul
      apt:
        name: consul
        state: present # Just need something installed.
        # state: latest # Make sure latest version is installed.

    # ------------------------------
    # Configure
    # ------------------------------
    - name: Consul | Config Files | /etc/consul.d
      copy:
        src: "{{ path_git_root }}/os/etc/consul.d"
        dest: "/etc/"
        owner: "consul"
        group: "consul"
        mode: "u=rw,go=r"
        directory_mode: "u=rwx,go=rx"
      register: config_file_consul
      # notify:
      #   - restart-service-consul

    - name: Consul | Config Files | /etc/system.d/service/
      copy:
        src: "{{ path_git_root }}/os/etc/systemd/system/consul.service"
        dest: "/etc/systemd/system/consul.service"
        owner: "root"
        group: "root"
        mode: "u=rw,go=r"
        directory_mode: "u=rwx,go=rx"
      register: systemd_file_consul
      # notify:
      #   - restart-service-consul

    - name: Consul | Service | Reload `system.d` Daemon
      systemd:
        daemon_reload: yes
      when:
        - systemd_file_consul.changed

    - name: Consul | Service | Enable
      service:
        name: consul
        # Does nothing if already enabled & running.
        enabled: true
        state: started
      register: systemd_service_enabled_consul

    - name: Consul | Service | Restart
      service:
        name: consul
        state: restarted
      when:
        - systemd_file_consul.changed or config_file_consul.changed
        - not systemd_service_enabled_consul.changed

    - name: Consul | Web UI | Check
      uri:
        # NOTE: `8500` is the default port for Consul's web UI & `dc-2021-home` is our datacenter name in Consul/Nomad.
        url: "http://{{ ansible_host }}:8500/ui/dc-2021-home/services"
      when: run.config.consul


    # --------------------------------------------------------------------------
    # [Install] Network File Share
    # --------------------------------------------------------------------------

    - name: Apt | Install | CIFS Utils (for NFS)
      apt:
        name: cifs-utils
        state: present


    # --------------------------------------------------------------------------
    # [Mount] Network File Shares
    # --------------------------------------------------------------------------

    - name: NFS | Root Directory | Create
      file:
        state: directory
        path: "/mnt/nfs"
        owner: "{{ os.user }}"
        group: "{{ os.group }}"
        recurse: no

    - name: NFS | Mount Directory
      include_tasks: "nfs.add-mount.yaml"
      with_items: "{{ nfs.mounts }}"
      loop_control:
        loop_var: mount_item


    # --------------------------------------------------------------------------
    # [Clean-Up]
    # --------------------------------------------------------------------------

    - name: Apt | Auto-Clean
      apt:
        autoclean: yes

    - name: Apt | Auto-Remove
      apt:
        autoremove: yes


  # ============================================================================
  # Handlers
  # ============================================================================
  #
  # NOTE: Currently not using these as I need to have the services running their
  # latest config/etc ASAP. Maybe switching to roles and having Nomad/Consul
  # installed in separate roles than the "install Nomad services" parts would
  # make these handlers useful?
  #
  # handlers:
  #   # Restart `nomad` service to pick up new config settings.
  #   - name: restart-service-nomad
  #     service:
  #       name: nomad
  #       state: restarted
  #   # Restart `consul` service to pick up new config settings.
  #   - name: restart-service-consul
  #     service:
  #       name: consul
  #       state: restarted
